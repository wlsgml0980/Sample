<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	
		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- log4jdbc 설정전 Mysql
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/"></property>
		
		오라클 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"></property>  	
		-->
		
		<!-- log4jdbc 설정후 mysql 
		<property name="driverClassName"  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url"  value="jdbc:log4jdbc:mysql://127.0.0.1:3306/"></property>
		
		오라클
		-->	
		<property name="driverClassName"  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url"  value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:orcl"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="1234"></property>
	</bean>			
	
	<!--
		DataSource 설정으로 JDBC 연결후, MyBatis와 MySql을 연동시킴. 
		SqlSessionFactory : myBatis와 스프링의 Connection 생성.
	 -->		 		
	<bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">	   
	    
	    <!-- JDBC커넥션을 처리하는 DataSource와 mybatis를 연결. -->
	 	<property name="dataSource" ref="dataSource" />	
	 	
	 	<!-- mybatis 전용 설정파일을 스프링과 함께 작동하도록 연결함. -->
	 	<property name="configLocation"  value="classpath:/mybatis-config.xml"></property>	
	 	<!--  MyBatis가 동작하면 XML Mapper를 인식하도록 함.
            mapperLocations라는 속성을 추가하고, 작성된 mappers 폴더내의 어떤 폴더에서건
	 		Mapper.xml로 끝나면 자동으로 인식하도록 함.
	 	 -->				
		<property name="mapperLocations"  value="classpath:mappers/**/*Mapper.xml"></property> 
	</bean>	 
	
	<!-- 
		MyBatis에서 DAO를 이용하는 경우, SqlSessionTemplate라는 것을 이용해서 DAO를 구현함.
		mybatis-spring에서 제공하는 SqlSessionTempalte객체는 기본적인 트랜잭션 관리나 쓰레드 처리의
		안정성등을 보장해주고, 개발자들이 직접 DB 연결, 종료작업하는 것을 줄여줌.
		SqlSessionFactory를 생성자로 주입함.
	 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  destroy-method="clearCache">
	  <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
		
	<!-- 
		스프링이 MemberDAOImpl가 있는 패키지를 스캔해야만 @Repository 어노테이션이 작동해서
		스프링의 빈으로 등록함.
		패키지탐색기에서 MemberDAOImpl.java 파일 아이콘 우측상단에 s글자가 보이면 등록된 것임. 
	 -->
	<context:component-scan base-package="com.sample.dao"></context:component-scan>
	<context:component-scan base-package="com.sample.service"></context:component-scan>		
		
</beans>
